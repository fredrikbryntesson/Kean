// 
//  Box.cs (generated by template)
//  
//  Author:
//       Simon Mika <smika@hx.se>
//  
//  Copyright (c) 2011-2013 Simon Mika
// 
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
// 
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU Lesser General Public License for more details.
// 
//  You should have received a copy of the GNU Lesser General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.

using System;
using NUnit.Framework;
using Target = Kean.Math.Geometry3D;

namespace Kean.Math.Geometry3D.Test.Integer
{
    [TestFixture]
    public class Box :
		Kean.Test.Fixture<Box>
    {
        
          Target.Integer.Box Box0 = new Target.Integer.Box(1, 2, 3, 4, 5, 6);
          Target.Integer.Box Box1 = new Target.Integer.Box(4, 3, 2, 1, 5, 6);
		  Target.Integer.Box Box2 = new Target.Integer.Box(2, 1, 4, 3, 5, 6);
        
        protected override void Run()
        {
           
            this.Run(
                this.Casts,
                this.ValueCasts,
                this.ValueStringCasts,
			    this.Equality,
                this.LeftTop,
                this.Size,
                this.Hash
             );
        }
		#region Equality
		[Test]
		public void Equality()
		{
			Target.Integer.Box box = null;
			Verify(this.Box0, Is.EqualTo(this.Box0));
			Verify(this.Box0.Equals(this.Box0 as object), Is.True);
			Verify(this.Box0 == this.Box0, Is.True);
			Verify(this.Box0 != this.Box1, Is.True);
			Verify(this.Box0 == box, Is.False);
			Verify(box == box, Is.True);
			Verify(box == this.Box0, Is.False);
		}
		#endregion
		[Test]
		public void LeftTop()
		{
			Target.Integer.Point leftTop = this.Box0.LeftTopFront;
			Verify(leftTop.X, Is.EqualTo(1));
			Verify(leftTop.Y, Is.EqualTo(2));
			Verify(leftTop.Z, Is.EqualTo(3));
		}
		[Test]
		public void Size()
		{
			Target.Integer.Size size = this.Box0.Size;
			Verify(size.Width, Is.EqualTo(4));
			Verify(size.Height, Is.EqualTo(5));
			Verify(size.Depth, Is.EqualTo(6));
		}

		#region Hash Code
		[Test]
		public void Hash()
		{
			Verify(this.Box0.GetHashCode(), Is.Not.EqualTo(0));
		}
		#endregion
		#region Casts
		[Test]
        public void Casts()
        {
            // integer - Integer
            Target.Integer.Box integer = new Target.Integer.Box(10, 20, 30, 40, 50, 60);
            Target.Integer.Box Integer = integer;
            Verify(Integer.Left, Is.EqualTo(10));
            Verify(Integer.Top, Is.EqualTo(20));
            Verify(Integer.Front, Is.EqualTo(30));
            Verify(Integer.Width, Is.EqualTo(40));
            Verify(Integer.Height, Is.EqualTo(50));
            Verify(Integer.Depth, Is.EqualTo(60));
            Verify((Target.Integer.Box)Integer, Is.EqualTo(integer));
        }
        [Test]
        public void ValueCasts()
        {
            // integer - int
            Target.Integer.Box integer = new Target.Integer.Box(10, 20, 30, 40, 50, 60);
            Target.Integer.Box Integer = integer;
            Verify(Integer.Left, Is.EqualTo(10));
            Verify(Integer.Top, Is.EqualTo(20));
            Verify(Integer.Front, Is.EqualTo(30));
            Verify(Integer.Width, Is.EqualTo(40));
            Verify(Integer.Height, Is.EqualTo(50));
            Verify(Integer.Depth, Is.EqualTo(60));
            Verify((Target.Integer.Box)Integer, Is.EqualTo(integer));
        }
        [Test]
        public void ValueStringCasts()
        {
            string textFromValue = new Target.Integer.Box(10, 20, 30, 40, 50, 60);
            Verify(textFromValue, Is.EqualTo("10, 20, 30, 40, 50, 60"));
            Target.Integer.Box @integerFromText = "10 20 30 40 50 60";
            Verify(@integerFromText.Left, Is.EqualTo(10));
            Verify(@integerFromText.Top, Is.EqualTo(20));
            Verify(@integerFromText.Front, Is.EqualTo(30));
            Verify(@integerFromText.Width, Is.EqualTo(40));
            Verify(@integerFromText.Height, Is.EqualTo(50));
            Verify(@integerFromText.Depth, Is.EqualTo(60));
        }


        #endregion
    }
}
